name: Build, Rename, and Release

on:
  push:
    tags:
      - 'v*.*.*'  # 当推送符合 vX.X.X 格式的标签时触发

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: 检出代码
        uses: actions/checkout@v3

      - name: 设置 .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'

      - name: 恢复依赖项
        run: dotnet restore

      - name: 构建项目
        run: dotnet build --configuration Release

      - name: 发布应用程序
        run: dotnet publish -c Release -o publish

      - name: 重命名文件
        run: |
          cd publish
          Rename-Item "AshClicker.exe" "AshClicker-${{ github.ref_name }}.exe"

      - name: 计算指纹
        run: |
          cd publish
          certutil -hashfile AshClicker-${{ github.ref_name }}.exe SHA256 >> ../指纹信息.txt
          type ../指纹信息.txt

      - name: 读取指纹内容
        id: read_hashes
        run: echo "::set-output name=hashes::$(cat 指纹信息.txt)"

      - name: 创建 Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            以下是生成的文件指纹（SHA256）：
            ```
            ${{ steps.read_hashes.outputs.hashes }}
            ```

            **验证文件完整性：**
            1. 在 Windows 系统中打开命令提示符。
            2. 输入以下命令以验证指纹：
               ```
               certutil -hashfile 文件路径 SHA256
               ```
            3. 比较输出的指纹值与此处列出的指纹是否一致。
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 上传可执行文件
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: publish/AshClicker-${{ github.ref_name }}.exe
          asset_name: AshClicker-${{ github.ref_name }}.exe
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 上传指纹文件
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: 指纹信息.txt
          asset_name: 指纹信息.txt
          asset_content_type: text/plain
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
